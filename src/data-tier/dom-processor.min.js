import{getPath as e,setPath as t,callViewFunction as n}from"./utils.min.js";const s=Object.freeze({subtree:!0,childList:!0,attributes:!0,attributeFilter:["data-tie"],attributeOldValue:!0,characterData:!1,characterDataOldValue:!1}),o=Symbol("bound.dom.observer"),i=Symbol("bound.change.listener");export class DOMProcessor{constructor(e){this._dtInstance=e,this._roots=new WeakMap,this._elementsMap=new WeakSet,this[o]=this._processDomChanges.bind(this),this[i]=this._changeListener.bind(this)}addDocument(e){if(!e||Node.DOCUMENT_NODE!==e.nodeType&&Node.DOCUMENT_FRAGMENT_NODE!==e.nodeType)throw new Error("invalid argument, must be one of: DOCUMENT_NODE, DOCUMENT_FRAGMENT_NODE");if(this._roots.has(e))return console.warn("any root document may be added only once"),!1;const t=new MutationObserver(this[o]);t.observe(e,s),this._roots.set(e,t);for(let t=0,n=e.children.length;t<n;t++)this._addTree(e.children[t]);return!0}removeDocument(e){if(!this._roots.has(e))return console.warn(`no root document ${e} known`),!1;this._roots.get(e).disconnect(),this._roots.delete(e);for(let t=0,n=e.children.length;t<n;t++)this._dropTree(e.children[t]);return!0}_processDomChanges(e){const t=e.length;let n,s,o=0;for(;o<t;o++)if("attributes"===(s=(n=e[o]).type)){const e=n.attributeName,t=n.target,s=n.oldValue,o=t.getAttribute(e);s!==o&&"data-tie"===e&&this._onTieParamChange(t,o,s)}else if("childList"===s){const e=n.addedNodes;for(let t=0,n=e.length;t<n;t++){let n=e[t];n.nodeType===Node.ELEMENT_NODE&&this._addTree(n)}const t=n.removedNodes;for(let e=0,n=t.length;e<n;e++){let n=t[e];n.nodeType===Node.ELEMENT_NODE&&this._dropTree(n)}}}_onTieParamChange(e,t,n){if(n){const t=e[this._dtInstance.paramsKey];if(t){this._dtInstance.views.delView(e,t);for(const n of t)n.changeEvent&&e.removeEventListener(n.changeEvent,this[i])}}if(t){const t=this._dtInstance.views.addView(e);if(t){this._updateFromView(e,t);for(const n of t)n.changeEvent&&e.addEventListener(n.changeEvent,this[i])}}}_addTree(e){if(this._addOne(e),e.childElementCount){let t;const n=document.createTreeWalker(e,NodeFilter.SHOW_ELEMENT);for(;t=n.nextNode();)this._addOne(t)}}_dropTree(e){if(this._dropOne(e),e.childElementCount){let t;const n=document.createTreeWalker(e,NodeFilter.SHOW_ELEMENT);for(;t=n.nextNode();)this._dropOne(t)}}_addOne(e){if(!this._elementsMap.has(e))if(this._elementsMap.add(e),e.nodeName.indexOf("-")>0&&!e.matches(":defined"))this._waitDefined(e);else{const t=this._dtInstance.views.addView(e);if(t){this._updateFromView(e,t);for(const n of t)n.changeEvent&&e.addEventListener(n.changeEvent,this[i])}e.shadowRoot&&this.addDocument(e.shadowRoot)}}_waitDefined(e){customElements.whenDefined(e.nodeName.toLowerCase()).then(()=>{this._elementsMap.delete(e),this._addOne(e)})}_dropOne(e){if(!this._elementsMap.has(e))return;this._elementsMap.delete(e);let t=e[this._dtInstance.paramsKey];if(t){this._dtInstance.views.delView(e,t);for(const n of t)n.changeEvent&&e.removeEventListener(n.changeEvent,this[i])}e.shadowRoot&&this.removeDocument(e.shadowRoot)}_changeListener(e){const n=e.type,s=e.currentTarget,o=s[this._dtInstance.paramsKey];if(!o)return;let i,r,a,d=o.length;for(;d--;)(i=o[d]).changeEvent===n&&(r=this._dtInstance.ties.get(i.tieKey))&&(a=s[i.targetProperty],t(r,i.path,a))}_updateFromView(t,s){let o=s.length;for(;o--;){const i=s[o];if(i.isFunctional){let s=!1;const o=[];i.fParams.forEach(t=>{let n;const i=this._dtInstance.ties.get(t.tieKey);i&&(n=e(i,t.path),s=!0),o.push(n)}),s&&(o.push(null),n(t,i.targetProperty,o))}else{const n=this._dtInstance.ties.get(i.tieKey);if(void 0!==n){const s=e(n,i.path);this._dtInstance.views.setViewProperty(t,i,s)}}}}};