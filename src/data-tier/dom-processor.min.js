import{getTargetProperty as e,addChangeListener as t,delChangeListener as s,getPath as n,setPath as o,callViewFunction as i}from"./utils.min.js";const r=Object.freeze({subtree:!0,childList:!0,attributes:!0,attributeFilter:["data-tie"],attributeOldValue:!0,characterData:!1,characterDataOldValue:!1}),a=Symbol("bound.dom.observer"),d=Symbol("bound.change.listener");export class DOMProcessor{constructor(e){this._dtInstance=e,this._roots=new WeakMap,this._elementsMap=new WeakSet,this[a]=this._processDomChanges.bind(this),this[d]=this._changeListener.bind(this)}addDocument(e){if(!e||Node.DOCUMENT_NODE!==e.nodeType&&Node.DOCUMENT_FRAGMENT_NODE!==e.nodeType)throw new Error("invalid argument, must be one of: DOCUMENT_NODE, DOCUMENT_FRAGMENT_NODE");if(this._roots.has(e))return console.warn("any root document may be added only once"),!1;const t=new MutationObserver(this[a]);t.observe(e,r),this._roots.set(e,t);for(let t=0,s=e.children.length;t<s;t++)this._addTree(e.children[t]);return!0}removeDocument(e){if(!this._roots.has(e))return console.warn(`no root document ${e} known`),!1;this._roots.get(e).disconnect(),this._roots.delete(e);for(let t=0,s=e.children.length;t<s;t++)this._dropTree(e.children[t]);return!0}_processDomChanges(e){const t=e.length;let s,n,o=0;for(;o<t;o++)if("attributes"===(n=(s=e[o]).type)){const e=s.attributeName,t=s.target,n=s.oldValue,o=t.getAttribute(e);n!==o&&"data-tie"===e&&this._onTieParamChange(t,o,n)}else if("childList"===n){const e=s.addedNodes;for(let t=0,s=e.length;t<s;t++){let s=e[t];s.nodeType===Node.ELEMENT_NODE&&this._addTree(s)}const t=s.removedNodes;for(let e=0,s=t.length;e<s;e++){let s=t[e];s.nodeType===Node.ELEMENT_NODE&&this._dropTree(s)}}}_onTieParamChange(e,n,o){if(o){const t=e[this._dtInstance.paramsKey];t&&(this._dtInstance.views.delView(e,t),s(e,this[d]))}if(n){const s=this._dtInstance.views.addView(e);s&&(this._updateFromView(e,s),t(e,this[d]))}}_addTree(e){if(this._addOne(e),e.childElementCount){let t;const s=document.createTreeWalker(e,NodeFilter.SHOW_ELEMENT);for(;t=s.nextNode();)this._addOne(t)}}_dropTree(e){if(this._dropOne(e),e.childElementCount){let t;const s=document.createTreeWalker(e,NodeFilter.SHOW_ELEMENT);for(;t=s.nextNode();)this._dropOne(t)}}_addOne(e){if(!this._elementsMap.has(e))if(this._elementsMap.add(e),e.tagName.indexOf("-")>0&&!e.matches(":defined"))this._waitDefined(e);else{const s=this._dtInstance.views.addView(e);s&&(this._updateFromView(e,s),t(e,this[d])),e.shadowRoot&&this.addDocument(e.shadowRoot)}}_waitDefined(e){customElements.whenDefined(e.tagName.toLowerCase()).then(()=>{this._elementsMap.delete(e),this._addOne(e)})}_dropOne(e){if(!this._elementsMap.has(e))return;this._elementsMap.delete(e);let t=e[this._dtInstance.paramsKey];t&&(this._dtInstance.views.delView(e,t),s(e,this[d])),e.shadowRoot&&this.removeDocument(e.shadowRoot)}_changeListener(t){const s=t.currentTarget,n=e(s),i=s[this._dtInstance.paramsKey];let r,a,d;if(!i)return;let h=i.length;for(;h--;)(r=i[h]).targetProperty===n&&(a=this._dtInstance.ties.get(r.tieKey))&&(d=s[n],o(a,r.path,d))}_updateFromView(e,t){let s=t.length;for(;s--;){const o=t[s];if(o.isFunctional){let t=!1;const s=[];o.fParams.forEach(e=>{let o;const i=this._dtInstance.ties.get(e.tieKey);i&&(o=n(i,e.path),t=!0),s.push(o)}),t&&(s.push(null),i(e,o.targetProperty,s))}else{const t=this._dtInstance.ties.get(o.tieKey);if(t){let s=n(t,o.path);void 0===s&&(s=""),this._dtInstance.views.setViewProperty(e,o,s)}}}}};